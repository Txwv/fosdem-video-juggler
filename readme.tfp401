Programming the TFP401 from the banana-pi m1:
---------------------------------------------

!!! MAKE SURE THAT THE TFP401 IS NOT CONNECTED TO USB OR HDMI !!!

Attach the supplied cable from the big io header (white corner is pin 1),
to the tfp401 module (red is +5V, black is GND). Do not attach anything else
to the tfp401 module.

Install the necessary package for verification:

# apt-get install read-edid

Make sure the i2c driver is loaded:

# modprobe i2c-dev

Test the module:

# get-edid | parse-edid

This will show the original EDID by adafruit:

> This is read-edid version 3.0.2. Prepare for some fun.
> Attempting to use i2c interface
> No EDID on bus 0
> No EDID on bus 2
> 1 potential busses found: 1
> 128-byte EDID successfully retrieved from i2c bus 1
> Looks like i2c was successful. Have a good day.
> Checksum Correct
>
> Section "Monitor"
> 	Identifier ""
>	ModelName ""
>	VendorName "ADA"
>	# Monitor Manufactured week 1 of 2007
>	# EDID version 1.3
>	# Digital Display
>	DisplaySize 150 100
>	Gamma 1.00
>	Option "DPMS" "false"
>	Modeline 	"Mode 0" -hsync -vsync 
> EndSection

Our tool comes with the edid blob inside.

Just run:

# gcc -Wall tfp401_edid.c

Then you can run:

# ./a.out

Which will show:

> /dev/i2c-1:0x50: 128 bytes written.

You can then verify that the new edid has taken hold:

# get-edid | parse-edid

Which should now show:

> This is read-edid version 3.0.2. Prepare for some fun.
> Attempting to use i2c interface
> No EDID on bus 0
> No EDID on bus 2
> 1 potential busses found: 1
> 128-byte EDID successfully retrieved from i2c bus 1
> Looks like i2c was successful. Have a good day.
> Checksum Correct
>
> Section "Monitor"
>	Identifier "720p TFP401"
>	ModelName "720p TFP401"
>	VendorName "LNX"
>	# Monitor Manufactured week 5 of 2012
>	# EDID version 1.3
>	# Analog Display
>	DisplaySize 440 250
>	Gamma 2.20
>	Option "DPMS" "true"
>	Horizsync 44-46
>	VertRefresh 59-61
>	# Maximum pixel clock is 80MHz
>	#Not giving standard mode: 1280x720, 60Hz
>	Modeline 	"Mode 0" +hsync +vsync 
> EndSection

If you wish to see the detailed timing now programmed, you need to pipe
get-edid through edid-decode (from the edid-decode package).
